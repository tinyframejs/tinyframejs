"use strict";(self.webpackChunktinyframejs_docs=self.webpackChunktinyframejs_docs||[]).push([[7609],{3774:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>t});var i=s(6672);const l={},r=i.createContext(l);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},6537:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"getting-started/tutorials/filtering","title":"How do I select a subset of a table?","description":"Learn how to filter rows and select columns in TinyFrameJS","source":"@site/docs/getting-started/tutorials/filtering.md","sourceDirName":"getting-started/tutorials","slug":"/getting-started/tutorials/filtering","permalink":"/docs/getting-started/tutorials/filtering","draft":false,"unlisted":false,"editUrl":"https://github.com/tinyframejs/tinyframejs/edit/main/docs/getting-started/tutorials/filtering.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"filtering","title":"How do I select a subset of a table?","sidebar_position":3,"description":"Learn how to filter rows and select columns in TinyFrameJS"},"sidebar":"docs","previous":{"title":"How do I read and write tabular data?","permalink":"/docs/getting-started/tutorials/io"},"next":{"title":"How to create plots in TinyFrameJS?","permalink":"/docs/getting-started/tutorials/plotting"}}');var l=s(3420),r=s(3774);const a={id:"filtering",title:"How do I select a subset of a table?",sidebar_position:3,description:"Learn how to filter rows and select columns in TinyFrameJS"},t="How do I select a subset of a table?",c={},o=[{value:"Selecting Columns",id:"selecting-columns",level:2},{value:"Using <code>select()</code>",id:"using-select",level:3},{value:"Using <code>drop()</code>",id:"using-drop",level:3},{value:"Using column patterns",id:"using-column-patterns",level:3},{value:"Filtering Rows",id:"filtering-rows",level:2},{value:"Using <code>filter()</code>",id:"using-filter",level:3},{value:"Using <code>query()</code>",id:"using-query",level:3},{value:"Using <code>where()</code>",id:"using-where",level:3},{value:"Selecting by Index",id:"selecting-by-index",level:2},{value:"Using <code>at()</code>",id:"using-at",level:3},{value:"Using <code>iloc()</code>",id:"using-iloc",level:3},{value:"Using <code>loc()</code>",id:"using-loc",level:3},{value:"Sampling Data",id:"sampling-data",level:2},{value:"Random sampling",id:"random-sampling",level:3},{value:"Stratified sampling",id:"stratified-sampling",level:3},{value:"Combining Operations",id:"combining-operations",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"how-do-i-select-a-subset-of-a-table",children:"How do I select a subset of a table?"})}),"\n",(0,l.jsx)(n.p,{children:"One of the most common operations in data analysis is selecting a subset of your data. TinyFrameJS provides several methods for filtering rows and selecting columns."}),"\n",(0,l.jsx)(n.h2,{id:"selecting-columns",children:"Selecting Columns"}),"\n",(0,l.jsxs)(n.h3,{id:"using-select",children:["Using ",(0,l.jsx)(n.code,{children:"select()"})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"select()"})," method allows you to choose specific columns from a DataFrame:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"import { DataFrame } from 'tinyframejs';\n\nconst df = new DataFrame([\n  {name: 'Alice', age: 25, city: 'New York', salary: 70000},\n  {name: 'Bob', age: 30, city: 'San Francisco', salary: 85000},\n  {name: 'Charlie', age: 35, city: 'Chicago', salary: 90000}\n]);\n\n// Select specific columns\nconst nameAndAge = df.select(['name', 'age']);\nnameAndAge.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name    \u2502 age \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   0   \u2502 Alice   \u2502 25  \u2502\n\u2502   1   \u2502 Bob     \u2502 30  \u2502\n\u2502   2   \u2502 Charlie \u2502 35  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"using-drop",children:["Using ",(0,l.jsx)(n.code,{children:"drop()"})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"drop()"})," method allows you to remove specific columns:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Drop specific columns\nconst withoutCityAndSalary = df.drop(['city', 'salary']);\nwithoutCityAndSalary.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name    \u2502 age \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   0   \u2502 Alice   \u2502 25  \u2502\n\u2502   1   \u2502 Bob     \u2502 30  \u2502\n\u2502   2   \u2502 Charlie \u2502 35  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(n.h3,{id:"using-column-patterns",children:"Using column patterns"}),"\n",(0,l.jsx)(n.p,{children:"You can also select columns using patterns:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Select columns that start with 'a'\nconst aColumns = df.selectByPattern('^a');\naColumns.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 age \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   0   \u2502 25  \u2502\n\u2502   1   \u2502 30  \u2502\n\u2502   2   \u2502 35  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(n.h2,{id:"filtering-rows",children:"Filtering Rows"}),"\n",(0,l.jsxs)(n.h3,{id:"using-filter",children:["Using ",(0,l.jsx)(n.code,{children:"filter()"})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"filter()"})," method allows you to select rows based on a condition:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Filter rows where age is greater than 25\nconst olderThan25 = df.filter(row => row.age > 25);\nolderThan25.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name    \u2502 age \u2502 city          \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   1   \u2502 Bob     \u2502 30  \u2502 San Francisco \u2502 85000  \u2502\n\u2502   2   \u2502 Charlie \u2502 35  \u2502 Chicago       \u2502 90000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(n.p,{children:"You can use multiple conditions:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Filter rows where age is greater than 25 AND salary is greater than 85000\nconst olderAndHighPaid = df.filter(row => row.age > 25 && row.salary > 85000);\nolderAndHighPaid.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name    \u2502 age \u2502 city    \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   2   \u2502 Charlie \u2502 35  \u2502 Chicago \u2502 90000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"using-query",children:["Using ",(0,l.jsx)(n.code,{children:"query()"})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"query()"})," method allows you to filter rows using a SQL-like syntax:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Filter using a SQL-like query\nconst fromNewYork = df.query(\"city == 'New York'\");\nfromNewYork.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name  \u2502 age \u2502 city     \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   0   \u2502 Alice \u2502 25  \u2502 New York \u2502 70000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(n.p,{children:"You can use complex expressions:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Complex query\nconst complexQuery = df.query(\"age > 25 and city.includes('Francisco') or salary >= 90000\");\ncomplexQuery.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name    \u2502 age \u2502 city          \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   1   \u2502 Bob     \u2502 30  \u2502 San Francisco \u2502 85000  \u2502\n\u2502   2   \u2502 Charlie \u2502 35  \u2502 Chicago       \u2502 90000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"using-where",children:["Using ",(0,l.jsx)(n.code,{children:"where()"})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"where()"})," method allows you to filter rows using column-wise conditions:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Filter using column conditions\nconst highSalary = df.where('salary', '>', 80000);\nhighSalary.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name    \u2502 age \u2502 city          \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   1   \u2502 Bob     \u2502 30  \u2502 San Francisco \u2502 85000  \u2502\n\u2502   2   \u2502 Charlie \u2502 35  \u2502 Chicago       \u2502 90000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(n.p,{children:"You can chain multiple conditions:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Chain multiple conditions\nconst filtered = df\n  .where('age', '>=', 30)\n  .where('city', '!=', 'Chicago');\n\nfiltered.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name\u2502 age \u2502 city          \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   1   \u2502 Bob \u2502 30  \u2502 San Francisco \u2502 85000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(n.h2,{id:"selecting-by-index",children:"Selecting by Index"}),"\n",(0,l.jsxs)(n.h3,{id:"using-at",children:["Using ",(0,l.jsx)(n.code,{children:"at()"})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"at()"})," method allows you to select a row by its index:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Get a single row by index\nconst firstRow = df.at(0);\nconsole.log(firstRow);\n// Output: {name: 'Alice', age: 25, city: 'New York', salary: 70000}\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"using-iloc",children:["Using ",(0,l.jsx)(n.code,{children:"iloc()"})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"iloc()"})," method allows you to select rows and columns by their integer positions:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Select rows 0 and 2, columns 1 and 3\nconst subset = df.iloc([0, 2], [1, 3]);\nsubset.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 age \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   0   \u2502 25  \u2502 70000  \u2502\n\u2502   2   \u2502 35  \u2502 90000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"using-loc",children:["Using ",(0,l.jsx)(n.code,{children:"loc()"})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"loc()"})," method allows you to select rows and columns by their labels:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Select rows with index 0 and 2, columns 'age' and 'salary'\nconst subset = df.loc([0, 2], ['age', 'salary']);\nsubset.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 age \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   0   \u2502 25  \u2502 70000  \u2502\n\u2502   2   \u2502 35  \u2502 90000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(n.h2,{id:"sampling-data",children:"Sampling Data"}),"\n",(0,l.jsx)(n.h3,{id:"random-sampling",children:"Random sampling"}),"\n",(0,l.jsx)(n.p,{children:"You can select a random sample of rows:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Get a random sample of 2 rows\nconst sample = df.sample(2);\nsample.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output (will vary):"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name    \u2502 age \u2502 city          \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   0   \u2502 Alice   \u2502 25  \u2502 New York      \u2502 70000  \u2502\n\u2502   2   \u2502 Charlie \u2502 35  \u2502 Chicago       \u2502 90000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(n.h3,{id:"stratified-sampling",children:"Stratified sampling"}),"\n",(0,l.jsx)(n.p,{children:"You can also perform stratified sampling, which maintains the proportion of values in a specific column:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Get a stratified sample based on the 'city' column\nconst stratifiedSample = df.stratifiedSample('city', 0.5);\nstratifiedSample.print();\n"})}),"\n",(0,l.jsx)(n.h2,{id:"combining-operations",children:"Combining Operations"}),"\n",(0,l.jsx)(n.p,{children:"You can chain multiple operations together:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"// Chain operations\nconst result = df\n  .select(['name', 'age', 'salary'])  // Select only these columns\n  .filter(row => row.age >= 30)       // Filter rows where age >= 30\n  .sort('salary', {ascending: false}); // Sort by salary in descending order\n\nresult.print();\n"})}),"\n",(0,l.jsx)(n.p,{children:"Output:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 index \u2502 name    \u2502 age \u2502 salary \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   2   \u2502 Charlie \u2502 35  \u2502 90000  \u2502\n\u2502   1   \u2502 Bob     \u2502 30  \u2502 85000  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,l.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsx)(n.p,{children:"Now that you know how to select subsets of your data, you can:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Learn how to ",(0,l.jsx)(n.a,{href:"./plotting",children:"create plots from your data"})]}),"\n",(0,l.jsxs)(n.li,{children:["Explore how to ",(0,l.jsx)(n.a,{href:"./derived-columns",children:"create derived columns"})]}),"\n",(0,l.jsxs)(n.li,{children:["Discover how to ",(0,l.jsx)(n.a,{href:"./statistics",children:"calculate summary statistics"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);