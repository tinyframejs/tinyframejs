"use strict";(self.webpackChunktinyframejs_docs=self.webpackChunktinyframejs_docs||[]).push([[1487],{3106:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"getting-started/tutorials/statistics","title":"How to calculate summary statistics","description":"Learn how to calculate and analyze summary statistics in TinyFrameJS","source":"@site/docs/getting-started/tutorials/statistics.md","sourceDirName":"getting-started/tutorials","slug":"/getting-started/tutorials/statistics","permalink":"/docs/getting-started/tutorials/statistics","draft":false,"unlisted":false,"editUrl":"https://github.com/tinyframejs/tinyframejs/edit/main/docs/getting-started/tutorials/statistics.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"id":"statistics","title":"How to calculate summary statistics","sidebar_position":6,"description":"Learn how to calculate and analyze summary statistics in TinyFrameJS"},"sidebar":"docs","previous":{"title":"How to create new columns derived from existing columns","permalink":"/docs/getting-started/tutorials/derived-columns"},"next":{"title":"How to reshape the layout of tables","permalink":"/docs/getting-started/tutorials/reshaping"}}');var s=a(3420),i=a(3774);const r={id:"statistics",title:"How to calculate summary statistics",sidebar_position:6,description:"Learn how to calculate and analyze summary statistics in TinyFrameJS"},l="How to calculate summary statistics",c={},o=[{value:"Basic Summary Statistics",id:"basic-summary-statistics",level:2},{value:"Using <code>describe()</code>",id:"using-describe",level:3},{value:"Using <code>summary()</code>",id:"using-summary",level:3},{value:"Individual Statistics",id:"individual-statistics",level:2},{value:"Central Tendency",id:"central-tendency",level:3},{value:"Dispersion",id:"dispersion",level:3},{value:"Percentiles and Quantiles",id:"percentiles-and-quantiles",level:3},{value:"Correlation and Covariance",id:"correlation-and-covariance",level:3},{value:"Correlation Matrix",id:"correlation-matrix",level:3},{value:"Grouped Statistics",id:"grouped-statistics",level:2},{value:"Using <code>groupby()</code>",id:"using-groupby",level:3},{value:"Custom Aggregation Functions",id:"custom-aggregation-functions",level:3},{value:"Rolling Statistics",id:"rolling-statistics",level:2},{value:"Expanding Statistics",id:"expanding-statistics",level:2},{value:"Statistical Tests",id:"statistical-tests",level:2},{value:"Descriptive Statistics by Category",id:"descriptive-statistics-by-category",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"how-to-calculate-summary-statistics",children:"How to calculate summary statistics"})}),"\n",(0,s.jsx)(n.p,{children:"Statistical analysis is a fundamental part of data exploration and understanding. TinyFrameJS provides a comprehensive set of methods for calculating summary statistics on your data."}),"\n",(0,s.jsx)(n.h2,{id:"basic-summary-statistics",children:"Basic Summary Statistics"}),"\n",(0,s.jsxs)(n.h3,{id:"using-describe",children:["Using ",(0,s.jsx)(n.code,{children:"describe()"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"describe()"})," method provides a comprehensive summary of numeric columns in your DataFrame:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { DataFrame } from 'tinyframejs';\n\n// Create a sample DataFrame\nconst df = new DataFrame([\n  {name: 'Alice', age: 25, salary: 70000, department: 'Engineering'},\n  {name: 'Bob', age: 30, salary: 85000, department: 'Marketing'},\n  {name: 'Charlie', age: 35, salary: 90000, department: 'Engineering'},\n  {name: 'David', age: 28, salary: 75000, department: 'Sales'},\n  {name: 'Eve', age: 32, salary: 88000, department: 'Marketing'}\n]);\n\n// Get summary statistics for all numeric columns\nconst summary = df.describe();\nsummary.print();\n"})}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 statistic  \u2502 age     \u2502 salary     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 count      \u2502 5       \u2502 5          \u2502\n\u2502 mean       \u2502 30      \u2502 81600      \u2502\n\u2502 std        \u2502 3.74    \u2502 8443.46    \u2502\n\u2502 min        \u2502 25      \u2502 70000      \u2502\n\u2502 25%        \u2502 28      \u2502 75000      \u2502\n\u2502 50%        \u2502 30      \u2502 85000      \u2502\n\u2502 75%        \u2502 32      \u2502 88000      \u2502\n\u2502 max        \u2502 35      \u2502 90000      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"using-summary",children:["Using ",(0,s.jsx)(n.code,{children:"summary()"})]}),"\n",(0,s.jsxs)(n.p,{children:["For a more customized summary, you can use the ",(0,s.jsx)(n.code,{children:"summary()"})," method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Get a customized summary\nconst customSummary = df.summary({\n  columns: ['age', 'salary'],\n  statistics: ['count', 'mean', 'min', 'max', 'median']\n});\ncustomSummary.print();\n"})}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 statistic  \u2502 age     \u2502 salary     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 count      \u2502 5       \u2502 5          \u2502\n\u2502 mean       \u2502 30      \u2502 81600      \u2502\n\u2502 min        \u2502 25      \u2502 70000      \u2502\n\u2502 max        \u2502 35      \u2502 90000      \u2502\n\u2502 median     \u2502 30      \u2502 85000      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h2,{id:"individual-statistics",children:"Individual Statistics"}),"\n",(0,s.jsx)(n.h3,{id:"central-tendency",children:"Central Tendency"}),"\n",(0,s.jsx)(n.p,{children:"TinyFrameJS provides methods for calculating various measures of central tendency:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Calculate mean (average)\nconst meanAge = df.mean('age');\nconsole.log('Mean age:', meanAge);  // 30\n\n// Calculate median (middle value)\nconst medianAge = df.median('age');\nconsole.log('Median age:', medianAge);  // 30\n\n// Calculate mode (most frequent value)\nconst modeAge = df.mode('age');\nconsole.log('Mode age:', modeAge);  // [25, 30, 35, 28, 32] (all values appear once)\n\n// Calculate weighted mean\nconst weightedMean = df.weightedMean('age', 'salary');\nconsole.log('Weighted mean age:', weightedMean);  // 30.51\n"})}),"\n",(0,s.jsx)(n.h3,{id:"dispersion",children:"Dispersion"}),"\n",(0,s.jsx)(n.p,{children:"You can calculate various measures of dispersion:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Calculate variance\nconst varAge = df.variance('age');\nconsole.log('Variance of age:', varAge);  // 14\n\n// Calculate standard deviation\nconst stdAge = df.std('age');\nconsole.log('Standard deviation of age:', stdAge);  // 3.74\n\n// Calculate range\nconst rangeAge = df.range('age');\nconsole.log('Range of age:', rangeAge);  // 10\n\n// Calculate interquartile range (IQR)\nconst iqrAge = df.iqr('age');\nconsole.log('IQR of age:', iqrAge);  // 4\n"})}),"\n",(0,s.jsx)(n.h3,{id:"percentiles-and-quantiles",children:"Percentiles and Quantiles"}),"\n",(0,s.jsx)(n.p,{children:"You can calculate percentiles and quantiles:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Calculate a specific percentile\nconst p75Age = df.percentile('age', 75);\nconsole.log('75th percentile of age:', p75Age);  // 32\n\n// Calculate multiple percentiles\nconst percentiles = df.percentiles('age', [25, 50, 75]);\nconsole.log('Percentiles of age:', percentiles);  // [28, 30, 32]\n\n// Calculate quartiles\nconst quartiles = df.quartiles('age');\nconsole.log('Quartiles of age:', quartiles);  // [28, 30, 32]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"correlation-and-covariance",children:"Correlation and Covariance"}),"\n",(0,s.jsx)(n.p,{children:"You can calculate correlation and covariance between columns:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Calculate correlation between age and salary\nconst correlation = df.corr('age', 'salary');\nconsole.log('Correlation between age and salary:', correlation);  // 0.86\n\n// Calculate covariance between age and salary\nconst covariance = df.cov('age', 'salary');\nconsole.log('Covariance between age and salary:', covariance);  // 27000\n"})}),"\n",(0,s.jsx)(n.h3,{id:"correlation-matrix",children:"Correlation Matrix"}),"\n",(0,s.jsx)(n.p,{children:"You can calculate a correlation matrix for all numeric columns:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Calculate correlation matrix\nconst corrMatrix = df.corrMatrix();\ncorrMatrix.print();\n"})}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        \u2502 age     \u2502 salary     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 age    \u2502 1       \u2502 0.86       \u2502\n\u2502 salary \u2502 0.86    \u2502 1          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h2,{id:"grouped-statistics",children:"Grouped Statistics"}),"\n",(0,s.jsxs)(n.h3,{id:"using-groupby",children:["Using ",(0,s.jsx)(n.code,{children:"groupby()"})]}),"\n",(0,s.jsx)(n.p,{children:"You can calculate statistics for groups of data:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Group by department and calculate statistics\nconst groupedStats = df\n  .groupby('department')\n  .agg({\n    age: ['count', 'mean', 'std'],\n    salary: ['mean', 'min', 'max']\n  });\n\ngroupedStats.print();\n"})}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 department  \u2502 age_count  \u2502 age_mean   \u2502 age_std    \u2502 salary_mean    \u2502 salary_min     \u2502 salary_max     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Engineering \u2502 2          \u2502 30         \u2502 7.07       \u2502 80000          \u2502 70000          \u2502 90000          \u2502\n\u2502 Marketing   \u2502 2          \u2502 31         \u2502 1.41       \u2502 86500          \u2502 85000          \u2502 88000          \u2502\n\u2502 Sales       \u2502 1          \u2502 28         \u2502 0          \u2502 75000          \u2502 75000          \u2502 75000          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-aggregation-functions",children:"Custom Aggregation Functions"}),"\n",(0,s.jsx)(n.p,{children:"You can define custom aggregation functions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Group by department and apply custom aggregation\nconst customAgg = df\n  .groupby('department')\n  .agg({\n    age: [\n      'count',\n      'mean',\n      rows => Math.max(...rows) - Math.min(...rows)  // Custom range function\n    ],\n    salary: [\n      'mean',\n      rows => rows.reduce((a, b) => a + b, 0) / rows.length,  // Custom mean function\n      rows => rows.filter(x => x > 80000).length  // Count of salaries > 80000\n    ]\n  }, {\n    columnNames: [\n      'count', 'mean', 'range',  // Names for age aggregations\n      'avg', 'custom_mean', 'high_salary_count'  // Names for salary aggregations\n    ]\n  });\n\ncustomAgg.print();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"rolling-statistics",children:"Rolling Statistics"}),"\n",(0,s.jsx)(n.p,{children:"You can calculate statistics over a rolling window:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Create a time series DataFrame\nconst timeSeries = new DataFrame({\n  date: ['2023-01-01', '2023-01-02', '2023-01-03', '2023-01-04', '2023-01-05',\n         '2023-01-06', '2023-01-07', '2023-01-08', '2023-01-09', '2023-01-10'],\n  value: [10, 12, 15, 14, 16, 18, 17, 19, 20, 22]\n});\n\n// Calculate rolling mean with a window of 3\nconst rollingMean = timeSeries.rolling(3).mean('value');\nconsole.log('Rolling mean:', rollingMean);\n// [null, null, 12.33, 13.67, 15, 16, 17, 18, 18.67, 20.33]\n\n// Calculate multiple rolling statistics\nconst rollingStats = timeSeries.rolling(3).agg({\n  value: ['mean', 'std', 'min', 'max']\n});\nrollingStats.print();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"expanding-statistics",children:"Expanding Statistics"}),"\n",(0,s.jsx)(n.p,{children:"You can calculate statistics over an expanding window:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Calculate expanding mean\nconst expandingMean = timeSeries.expanding().mean('value');\nconsole.log('Expanding mean:', expandingMean);\n// [10, 11, 12.33, 12.75, 13.4, 14.17, 14.57, 15.12, 15.67, 16.3]\n\n// Calculate multiple expanding statistics\nconst expandingStats = timeSeries.expanding().agg({\n  value: ['mean', 'std', 'min', 'max']\n});\nexpandingStats.print();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"statistical-tests",children:"Statistical Tests"}),"\n",(0,s.jsx)(n.p,{children:"TinyFrameJS provides methods for performing statistical tests:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Create two samples\nconst sample1 = new DataFrame({\n  value: [10, 12, 15, 14, 16, 18, 17, 19, 20, 22]\n});\n\nconst sample2 = new DataFrame({\n  value: [11, 13, 14, 15, 17, 19, 18, 20, 21, 23]\n});\n\n// Perform t-test\nconst tTest = sample1.tTest(sample2, 'value');\nconsole.log('T-test result:', tTest);\n// { t: -1.34, pValue: 0.197, df: 18 }\n\n// Perform Mann-Whitney U test\nconst uTest = sample1.mannWhitneyU(sample2, 'value');\nconsole.log('Mann-Whitney U test result:', uTest);\n// { u: 35, pValue: 0.218 }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"descriptive-statistics-by-category",children:"Descriptive Statistics by Category"}),"\n",(0,s.jsx)(n.p,{children:"You can calculate descriptive statistics for each category:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Calculate statistics by department\nconst statsByDept = df.describeBy('department');\nstatsByDept.print();\n"})}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 department  \u2502 statistic  \u2502 age        \u2502 salary     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Engineering \u2502 count      \u2502 2          \u2502 2          \u2502\n\u2502             \u2502 mean       \u2502 30         \u2502 80000      \u2502\n\u2502             \u2502 std        \u2502 7.07       \u2502 14142.14   \u2502\n\u2502             \u2502 min        \u2502 25         \u2502 70000      \u2502\n\u2502             \u2502 25%        \u2502 27.5       \u2502 75000      \u2502\n\u2502             \u2502 50%        \u2502 30         \u2502 80000      \u2502\n\u2502             \u2502 75%        \u2502 32.5       \u2502 85000      \u2502\n\u2502             \u2502 max        \u2502 35         \u2502 90000      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Marketing   \u2502 count      \u2502 2          \u2502 2          \u2502\n\u2502             \u2502 mean       \u2502 31         \u2502 86500      \u2502\n\u2502             \u2502 std        \u2502 1.41       \u2502 2121.32    \u2502\n\u2502             \u2502 min        \u2502 30         \u2502 85000      \u2502\n\u2502             \u2502 25%        \u2502 30.5       \u2502 85750      \u2502\n\u2502             \u2502 50%        \u2502 31         \u2502 86500      \u2502\n\u2502             \u2502 75%        \u2502 31.5       \u2502 87250      \u2502\n\u2502             \u2502 max        \u2502 32         \u2502 88000      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Sales       \u2502 count      \u2502 1          \u2502 1          \u2502\n\u2502             \u2502 mean       \u2502 28         \u2502 75000      \u2502\n\u2502             \u2502 std        \u2502 NaN        \u2502 NaN        \u2502\n\u2502             \u2502 min        \u2502 28         \u2502 75000      \u2502\n\u2502             \u2502 25%        \u2502 28         \u2502 75000      \u2502\n\u2502             \u2502 50%        \u2502 28         \u2502 75000      \u2502\n\u2502             \u2502 75%        \u2502 28         \u2502 75000      \u2502\n\u2502             \u2502 max        \u2502 28         \u2502 75000      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"Now that you know how to calculate summary statistics with TinyFrameJS, you can:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Learn how to ",(0,s.jsx)(n.a,{href:"./reshaping",children:"reshape your data"})," for different analyses"]}),"\n",(0,s.jsxs)(n.li,{children:["Explore how to ",(0,s.jsx)(n.a,{href:"./combining-tables",children:"combine data from multiple tables"})]}),"\n",(0,s.jsxs)(n.li,{children:["Discover how to ",(0,s.jsx)(n.a,{href:"./time-series",children:"handle time series data"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},3774:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>l});var t=a(6672);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);