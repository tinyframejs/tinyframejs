"use strict";(self.webpackChunktinyframejs_docs=self.webpackChunktinyframejs_docs||[]).push([[4861],{3774:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>t});var s=r(6672);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}},7002:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api/functions/apiToFrame","title":"apiToFrame","description":"tinyframejs","source":"@site/docs/api/functions/apiToFrame.md","sourceDirName":"api/functions","slug":"/api/functions/apiToFrame","permalink":"/tinyframejs/docs/api/functions/apiToFrame","draft":false,"unlisted":false,"editUrl":"https://github.com/tinyframejs/tinyframejs/edit/main/docs/api/functions/apiToFrame.md","tags":[],"version":"current","frontMatter":{}}');var i=r(3420),a=r(3774);const o={},t=void 0,d={},c=[{value:"Parameters",id:"parameters",level:2},{value:"apiData",id:"apidata",level:3},{value:"options",id:"options",level:3},{value:"clean?",id:"clean",level:4},{value:"cleanFirst?",id:"cleanfirst",level:4},{value:"copy?",id:"copy",level:4},{value:"dataPath?",id:"datapath",level:4},{value:"mapping?",id:"mapping",level:4},{value:"postClean?",id:"postclean",level:4},{value:"saveRawData?",id:"saverawdata",level:4},{value:"transform?",id:"transform",level:4},{value:"useTypedArrays?",id:"usetypedarrays",level:4},{value:"Returns",id:"returns",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/tinyframejs/docs/api/",children:(0,i.jsx)(n.strong,{children:"tinyframejs"})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/tinyframejs/docs/api/",children:"tinyframejs"})," / apiToFrame"]}),"\n",(0,i.jsx)(n.h1,{id:"function-apitoframe",children:"Function: apiToFrame()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"apiToFrame"}),"(",(0,i.jsx)(n.code,{children:"apiData"}),", ",(0,i.jsx)(n.code,{children:"options"}),"): ",(0,i.jsx)(n.a,{href:"/tinyframejs/docs/api/classes/DataFrame",children:(0,i.jsx)(n.code,{children:"DataFrame"})})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Defined in: ",(0,i.jsx)(n.a,{href:"https://github.com/AlphaQuantJS/tinyframejs/blob/8368a3e56ba5f1155368e642d928da821698888c/src/io/transformers/apiToFrame.js#L254",children:"io/transformers/apiToFrame.js:254"})]}),"\n",(0,i.jsx)(n.p,{children:"Transforms API response data into a DataFrame\nHandles various API response formats and normalizes them"}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.h3,{id:"apidata",children:"apiData"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"any"})}),"\n",(0,i.jsx)(n.p,{children:"API data to transform"}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"options"}),"\n",(0,i.jsx)(n.p,{children:"Transformation options"}),"\n",(0,i.jsx)(n.h4,{id:"clean",children:"clean?"}),"\n",(0,i.jsx)(n.p,{children:"Object with the following properties:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"booleanFields?"}),": ",(0,i.jsx)(n.code,{children:"string[]"})," - Array of fields to convert to booleans"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"customCleaner?"}),": ",(0,i.jsx)(n.code,{children:"Function"})," - Custom cleaning function for each record"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dateField?"}),": ",(0,i.jsx)(n.code,{children:"string"})," - Name of date field to convert to Date object"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"numericFields?"}),": ",(0,i.jsx)(n.code,{children:"string[]"})," - Array of fields to convert to numbers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"removeEmptyStrings?"}),": ",(0,i.jsx)(n.code,{children:"boolean"})," - Whether to remove empty strings"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"removeFields?"}),": ",(0,i.jsx)(n.code,{children:"string[]"})," - Array of fields to remove"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"removeNulls?"}),": ",(0,i.jsx)(n.code,{children:"boolean"})," - Whether to remove null/undefined values"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"renameFields?"}),": ",(0,i.jsx)(n.code,{children:"any"})," - Object for renaming fields (oldName: newName)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stringFields?"}),": ",(0,i.jsx)(n.code,{children:"string[]"})," - Array of fields to convert to strings"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"trimStrings?"}),": ",(0,i.jsx)(n.code,{children:"boolean"})," - Whether to trim whitespace in strings"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cleanfirst",children:"cleanFirst?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Whether to clean data before converting to DataFrame"}),"\n",(0,i.jsx)(n.h4,{id:"copy",children:"copy?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"string"})}),"\n",(0,i.jsx)(n.p,{children:"Copy mode: 'none', 'shallow', or 'deep'"}),"\n",(0,i.jsx)(n.h4,{id:"datapath",children:"dataPath?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"string"})}),"\n",(0,i.jsx)(n.p,{children:"Path to data in the response (dot notation)"}),"\n",(0,i.jsx)(n.h4,{id:"mapping",children:"mapping?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"any"})}),"\n",(0,i.jsx)(n.p,{children:"Mapping of API fields to column names"}),"\n",(0,i.jsx)(n.h4,{id:"postclean",children:"postClean?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"any"})}),"\n",(0,i.jsx)(n.p,{children:"DataFrame cleaning options after conversion"}),"\n",(0,i.jsx)(n.h4,{id:"saverawdata",children:"saveRawData?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Whether to save raw data in the frame"}),"\n",(0,i.jsx)(n.h4,{id:"transform",children:"transform?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Function"})}),"\n",(0,i.jsx)(n.p,{children:"Custom transform function for each row"}),"\n",(0,i.jsx)(n.h4,{id:"usetypedarrays",children:"useTypedArrays?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Whether to use TypedArrays for numeric columns"}),"\n",(0,i.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/tinyframejs/docs/api/classes/DataFrame",children:(0,i.jsx)(n.code,{children:"DataFrame"})})}),"\n",(0,i.jsx)(n.p,{children:"DataFrame created from the API data"})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);