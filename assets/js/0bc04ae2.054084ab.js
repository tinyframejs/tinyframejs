"use strict";(self.webpackChunktinyframejs_docs=self.webpackChunktinyframejs_docs||[]).push([[1488],{3774:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var r=s(6672);const i={},t=r.createContext(i);function d(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:n},e.children)}},7277:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"api/functions/readTsv","title":"readTsv","description":"tinyframejs","source":"@site/docs/api/functions/readTsv.md","sourceDirName":"api/functions","slug":"/api/functions/readTsv","permalink":"/docs/api/functions/readTsv","draft":false,"unlisted":false,"editUrl":"https://github.com/AlphaQuantJS/tinyframejs/edit/main/docs/api/functions/readTsv.md","tags":[],"version":"current","frontMatter":{}}');var i=s(3420),t=s(3774);const d={},c=void 0,a={},o=[{value:"Parameters",id:"parameters",level:2},{value:"source",id:"source",level:3},{value:"options",id:"options",level:3},{value:"delimiter?",id:"delimiter",level:4},{value:"dynamicTyping?",id:"dynamictyping",level:4},{value:"frameOptions?",id:"frameoptions",level:4},{value:"header?",id:"header",level:4},{value:"skipEmptyLines?",id:"skipemptylines",level:4},{value:"Returns",id:"returns",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/docs/api/",children:(0,i.jsx)(n.strong,{children:"tinyframejs"})})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/api/",children:"tinyframejs"})," / readTsv"]}),"\n",(0,i.jsx)(n.h1,{id:"function-readtsv",children:"Function: readTsv()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"readTsv"}),"(",(0,i.jsx)(n.code,{children:"source"}),", ",(0,i.jsx)(n.code,{children:"options"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/docs/api/classes/DataFrame",children:(0,i.jsx)(n.code,{children:"DataFrame"})}),">"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Defined in: ",(0,i.jsx)(n.a,{href:"https://github.com/AlphaQuantJS/tinyframejs/blob/774ec19a646fb36d00f0c4a06bec916acd1a47d8/src/io/readers/tsv.js#L18",children:"io/readers/tsv.js:18"})]}),"\n",(0,i.jsx)(n.p,{children:"Reads a TSV file and returns a DataFrame."}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.h3,{id:"source",children:"source"}),"\n",(0,i.jsx)(n.p,{children:"TSV content as a string, path to file, File, Blob, or URL"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"string"})," | ",(0,i.jsx)(n.code,{children:"File"})," | ",(0,i.jsx)(n.code,{children:"Blob"})," | ",(0,i.jsx)(n.code,{children:"URL"})]}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"options"}),"\n",(0,i.jsx)(n.p,{children:"Options for parsing"}),"\n",(0,i.jsx)(n.h4,{id:"delimiter",children:"delimiter?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"string"})}),"\n",(0,i.jsx)(n.p,{children:"Delimiter character (default is tab)"}),"\n",(0,i.jsx)(n.h4,{id:"dynamictyping",children:"dynamicTyping?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Whether to automatically detect and convert types"}),"\n",(0,i.jsx)(n.h4,{id:"frameoptions",children:"frameOptions?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"any"})}),"\n",(0,i.jsx)(n.p,{children:"Options to pass to DataFrame.create"}),"\n",(0,i.jsx)(n.h4,{id:"header",children:"header?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Whether the TSV has a header row"}),"\n",(0,i.jsx)(n.h4,{id:"skipemptylines",children:"skipEmptyLines?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"boolean"})}),"\n",(0,i.jsx)(n.p,{children:"Whether to skip empty lines"}),"\n",(0,i.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"/docs/api/classes/DataFrame",children:(0,i.jsx)(n.code,{children:"DataFrame"})}),">"]}),"\n",(0,i.jsx)(n.p,{children:"Promise resolving to DataFrame created from the TSV"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);